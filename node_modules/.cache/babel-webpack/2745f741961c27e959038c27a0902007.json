{"ast":null,"code":"import _inherits from \"/Users/mac/Apps/sr-manager/frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/mac/Apps/sr-manager/frontend/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport _classCallCheck from \"/Users/mac/Apps/sr-manager/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/mac/Apps/sr-manager/frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { fromArray } from './fromArray';\nimport { isArray } from '../util/isArray';\nimport { Subscriber } from '../Subscriber';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { iterator as Symbol_iterator } from '../../internal/symbol/iterator';\nexport function zip() {\n  for (var _len = arguments.length, observables = new Array(_len), _key = 0; _key < _len; _key++) {\n    observables[_key] = arguments[_key];\n  }\n\n  var resultSelector = observables[observables.length - 1];\n\n  if (typeof resultSelector === 'function') {\n    observables.pop();\n  }\n\n  return fromArray(observables, undefined).lift(new ZipOperator(resultSelector));\n}\nexport var ZipOperator = /*#__PURE__*/function () {\n  function ZipOperator(resultSelector) {\n    _classCallCheck(this, ZipOperator);\n\n    this.resultSelector = resultSelector;\n  }\n\n  _createClass(ZipOperator, [{\n    key: \"call\",\n    value: function call(subscriber, source) {\n      return source.subscribe(new ZipSubscriber(subscriber, this.resultSelector));\n    }\n  }]);\n\n  return ZipOperator;\n}();\nexport var ZipSubscriber = /*#__PURE__*/function (_Subscriber) {\n  _inherits(ZipSubscriber, _Subscriber);\n\n  var _super = _createSuper(ZipSubscriber);\n\n  function ZipSubscriber(destination, resultSelector) {\n    var _this;\n\n    var values = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : Object.create(null);\n\n    _classCallCheck(this, ZipSubscriber);\n\n    _this = _super.call(this, destination);\n    _this.iterators = [];\n    _this.active = 0;\n    _this.resultSelector = typeof resultSelector === 'function' ? resultSelector : null;\n    _this.values = values;\n    return _this;\n  }\n\n  _createClass(ZipSubscriber, [{\n    key: \"_next\",\n    value: function _next(value) {\n      var iterators = this.iterators;\n\n      if (isArray(value)) {\n        iterators.push(new StaticArrayIterator(value));\n      } else if (typeof value[Symbol_iterator] === 'function') {\n        iterators.push(new StaticIterator(value[Symbol_iterator]()));\n      } else {\n        iterators.push(new ZipBufferIterator(this.destination, this, value));\n      }\n    }\n  }, {\n    key: \"_complete\",\n    value: function _complete() {\n      var iterators = this.iterators;\n      var len = iterators.length;\n      this.unsubscribe();\n\n      if (len === 0) {\n        this.destination.complete();\n        return;\n      }\n\n      this.active = len;\n\n      for (var i = 0; i < len; i++) {\n        var iterator = iterators[i];\n\n        if (iterator.stillUnsubscribed) {\n          var destination = this.destination;\n          destination.add(iterator.subscribe(iterator, i));\n        } else {\n          this.active--;\n        }\n      }\n    }\n  }, {\n    key: \"notifyInactive\",\n    value: function notifyInactive() {\n      this.active--;\n\n      if (this.active === 0) {\n        this.destination.complete();\n      }\n    }\n  }, {\n    key: \"checkIterators\",\n    value: function checkIterators() {\n      var iterators = this.iterators;\n      var len = iterators.length;\n      var destination = this.destination;\n\n      for (var i = 0; i < len; i++) {\n        var iterator = iterators[i];\n\n        if (typeof iterator.hasValue === 'function' && !iterator.hasValue()) {\n          return;\n        }\n      }\n\n      var shouldComplete = false;\n      var args = [];\n\n      for (var _i = 0; _i < len; _i++) {\n        var _iterator = iterators[_i];\n\n        var result = _iterator.next();\n\n        if (_iterator.hasCompleted()) {\n          shouldComplete = true;\n        }\n\n        if (result.done) {\n          destination.complete();\n          return;\n        }\n\n        args.push(result.value);\n      }\n\n      if (this.resultSelector) {\n        this._tryresultSelector(args);\n      } else {\n        destination.next(args);\n      }\n\n      if (shouldComplete) {\n        destination.complete();\n      }\n    }\n  }, {\n    key: \"_tryresultSelector\",\n    value: function _tryresultSelector(args) {\n      var result;\n\n      try {\n        result = this.resultSelector.apply(this, args);\n      } catch (err) {\n        this.destination.error(err);\n        return;\n      }\n\n      this.destination.next(result);\n    }\n  }]);\n\n  return ZipSubscriber;\n}(Subscriber);\n\nvar StaticIterator = /*#__PURE__*/function () {\n  function StaticIterator(iterator) {\n    _classCallCheck(this, StaticIterator);\n\n    this.iterator = iterator;\n    this.nextResult = iterator.next();\n  }\n\n  _createClass(StaticIterator, [{\n    key: \"hasValue\",\n    value: function hasValue() {\n      return true;\n    }\n  }, {\n    key: \"next\",\n    value: function next() {\n      var result = this.nextResult;\n      this.nextResult = this.iterator.next();\n      return result;\n    }\n  }, {\n    key: \"hasCompleted\",\n    value: function hasCompleted() {\n      var nextResult = this.nextResult;\n      return nextResult && nextResult.done;\n    }\n  }]);\n\n  return StaticIterator;\n}();\n\nvar StaticArrayIterator = /*#__PURE__*/function () {\n  function StaticArrayIterator(array) {\n    _classCallCheck(this, StaticArrayIterator);\n\n    this.array = array;\n    this.index = 0;\n    this.length = 0;\n    this.length = array.length;\n  }\n\n  _createClass(StaticArrayIterator, [{\n    key: Symbol_iterator,\n    value: function value() {\n      return this;\n    }\n  }, {\n    key: \"next\",\n    value: function next(value) {\n      var i = this.index++;\n      var array = this.array;\n      return i < this.length ? {\n        value: array[i],\n        done: false\n      } : {\n        value: null,\n        done: true\n      };\n    }\n  }, {\n    key: \"hasValue\",\n    value: function hasValue() {\n      return this.array.length > this.index;\n    }\n  }, {\n    key: \"hasCompleted\",\n    value: function hasCompleted() {\n      return this.array.length === this.index;\n    }\n  }]);\n\n  return StaticArrayIterator;\n}();\n\nvar ZipBufferIterator = /*#__PURE__*/function (_OuterSubscriber) {\n  _inherits(ZipBufferIterator, _OuterSubscriber);\n\n  var _super2 = _createSuper(ZipBufferIterator);\n\n  function ZipBufferIterator(destination, parent, observable) {\n    var _this2;\n\n    _classCallCheck(this, ZipBufferIterator);\n\n    _this2 = _super2.call(this, destination);\n    _this2.parent = parent;\n    _this2.observable = observable;\n    _this2.stillUnsubscribed = true;\n    _this2.buffer = [];\n    _this2.isComplete = false;\n    return _this2;\n  }\n\n  _createClass(ZipBufferIterator, [{\n    key: Symbol_iterator,\n    value: function value() {\n      return this;\n    }\n  }, {\n    key: \"next\",\n    value: function next() {\n      var buffer = this.buffer;\n\n      if (buffer.length === 0 && this.isComplete) {\n        return {\n          value: null,\n          done: true\n        };\n      } else {\n        return {\n          value: buffer.shift(),\n          done: false\n        };\n      }\n    }\n  }, {\n    key: \"hasValue\",\n    value: function hasValue() {\n      return this.buffer.length > 0;\n    }\n  }, {\n    key: \"hasCompleted\",\n    value: function hasCompleted() {\n      return this.buffer.length === 0 && this.isComplete;\n    }\n  }, {\n    key: \"notifyComplete\",\n    value: function notifyComplete() {\n      if (this.buffer.length > 0) {\n        this.isComplete = true;\n        this.parent.notifyInactive();\n      } else {\n        this.destination.complete();\n      }\n    }\n  }, {\n    key: \"notifyNext\",\n    value: function notifyNext(outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n      this.buffer.push(innerValue);\n      this.parent.checkIterators();\n    }\n  }, {\n    key: \"subscribe\",\n    value: function subscribe(value, index) {\n      return subscribeToResult(this, this.observable, this, index);\n    }\n  }]);\n\n  return ZipBufferIterator;\n}(OuterSubscriber); //# sourceMappingURL=zip.js.map","map":{"version":3,"sources":["/Users/mac/Apps/sr-manager/frontend/node_modules/rxjs/_esm2015/internal/observable/zip.js"],"names":["fromArray","isArray","Subscriber","OuterSubscriber","subscribeToResult","iterator","Symbol_iterator","zip","observables","resultSelector","length","pop","undefined","lift","ZipOperator","subscriber","source","subscribe","ZipSubscriber","destination","values","Object","create","iterators","active","value","push","StaticArrayIterator","StaticIterator","ZipBufferIterator","len","unsubscribe","complete","i","stillUnsubscribed","add","hasValue","shouldComplete","args","result","next","hasCompleted","done","_tryresultSelector","apply","err","error","nextResult","array","index","parent","observable","buffer","isComplete","shift","notifyInactive","outerValue","innerValue","outerIndex","innerIndex","innerSub","checkIterators"],"mappings":"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","sourcesContent":["import {fromArray} from './fromArray';\nimport {isArray} from '../util/isArray';\nimport {Subscriber} from '../Subscriber';\nimport {OuterSubscriber} from '../OuterSubscriber';\nimport {subscribeToResult} from '../util/subscribeToResult';\nimport {iterator as Symbol_iterator} from '../../internal/symbol/iterator';\n\nexport function zip(...observables) {\n    const resultSelector = observables[observables.length - 1];\n    if (typeof resultSelector === 'function') {\n        observables.pop();\n    }\n    return fromArray(observables, undefined).lift(new ZipOperator(resultSelector));\n}\n\nexport class ZipOperator {\n    constructor(resultSelector) {\n        this.resultSelector = resultSelector;\n    }\n\n    call(subscriber, source) {\n        return source.subscribe(new ZipSubscriber(subscriber, this.resultSelector));\n    }\n}\n\nexport class ZipSubscriber extends Subscriber {\n    constructor(destination, resultSelector, values = Object.create(null)) {\n        super(destination);\n        this.iterators = [];\n        this.active = 0;\n        this.resultSelector = (typeof resultSelector === 'function') ? resultSelector : null;\n        this.values = values;\n    }\n\n    _next(value) {\n        const iterators = this.iterators;\n        if (isArray(value)) {\n            iterators.push(new StaticArrayIterator(value));\n        } else if (typeof value[Symbol_iterator] === 'function') {\n            iterators.push(new StaticIterator(value[Symbol_iterator]()));\n        } else {\n            iterators.push(new ZipBufferIterator(this.destination, this, value));\n        }\n    }\n\n    _complete() {\n        const iterators = this.iterators;\n        const len = iterators.length;\n        this.unsubscribe();\n        if (len === 0) {\n            this.destination.complete();\n            return;\n        }\n        this.active = len;\n        for (let i = 0; i < len; i++) {\n            let iterator = iterators[i];\n            if (iterator.stillUnsubscribed) {\n                const destination = this.destination;\n                destination.add(iterator.subscribe(iterator, i));\n            } else {\n                this.active--;\n            }\n        }\n    }\n\n    notifyInactive() {\n        this.active--;\n        if (this.active === 0) {\n            this.destination.complete();\n        }\n    }\n\n    checkIterators() {\n        const iterators = this.iterators;\n        const len = iterators.length;\n        const destination = this.destination;\n        for (let i = 0; i < len; i++) {\n            let iterator = iterators[i];\n            if (typeof iterator.hasValue === 'function' && !iterator.hasValue()) {\n                return;\n            }\n        }\n        let shouldComplete = false;\n        const args = [];\n        for (let i = 0; i < len; i++) {\n            let iterator = iterators[i];\n            let result = iterator.next();\n            if (iterator.hasCompleted()) {\n                shouldComplete = true;\n            }\n            if (result.done) {\n                destination.complete();\n                return;\n            }\n            args.push(result.value);\n        }\n        if (this.resultSelector) {\n            this._tryresultSelector(args);\n        } else {\n            destination.next(args);\n        }\n        if (shouldComplete) {\n            destination.complete();\n        }\n    }\n\n    _tryresultSelector(args) {\n        let result;\n        try {\n            result = this.resultSelector.apply(this, args);\n        } catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.destination.next(result);\n    }\n}\n\nclass StaticIterator {\n    constructor(iterator) {\n        this.iterator = iterator;\n        this.nextResult = iterator.next();\n    }\n\n    hasValue() {\n        return true;\n    }\n\n    next() {\n        const result = this.nextResult;\n        this.nextResult = this.iterator.next();\n        return result;\n    }\n\n    hasCompleted() {\n        const nextResult = this.nextResult;\n        return nextResult && nextResult.done;\n    }\n}\n\nclass StaticArrayIterator {\n    constructor(array) {\n        this.array = array;\n        this.index = 0;\n        this.length = 0;\n        this.length = array.length;\n    }\n\n    [Symbol_iterator]() {\n        return this;\n    }\n\n    next(value) {\n        const i = this.index++;\n        const array = this.array;\n        return i < this.length ? {value: array[i], done: false} : {value: null, done: true};\n    }\n\n    hasValue() {\n        return this.array.length > this.index;\n    }\n\n    hasCompleted() {\n        return this.array.length === this.index;\n    }\n}\n\nclass ZipBufferIterator extends OuterSubscriber {\n    constructor(destination, parent, observable) {\n        super(destination);\n        this.parent = parent;\n        this.observable = observable;\n        this.stillUnsubscribed = true;\n        this.buffer = [];\n        this.isComplete = false;\n    }\n\n    [Symbol_iterator]() {\n        return this;\n    }\n\n    next() {\n        const buffer = this.buffer;\n        if (buffer.length === 0 && this.isComplete) {\n            return {value: null, done: true};\n        } else {\n            return {value: buffer.shift(), done: false};\n        }\n    }\n\n    hasValue() {\n        return this.buffer.length > 0;\n    }\n\n    hasCompleted() {\n        return this.buffer.length === 0 && this.isComplete;\n    }\n\n    notifyComplete() {\n        if (this.buffer.length > 0) {\n            this.isComplete = true;\n            this.parent.notifyInactive();\n        } else {\n            this.destination.complete();\n        }\n    }\n\n    notifyNext(outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.buffer.push(innerValue);\n        this.parent.checkIterators();\n    }\n\n    subscribe(value, index) {\n        return subscribeToResult(this, this.observable, this, index);\n    }\n}\n\n//# sourceMappingURL=zip.js.map\n"]},"metadata":{},"sourceType":"module"}