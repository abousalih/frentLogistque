{"ast":null,"code":"import _get from \"/Users/mac/Apps/sr-manager/frontend/node_modules/@babel/runtime/helpers/esm/get\";\nimport _getPrototypeOf from \"/Users/mac/Apps/sr-manager/frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _classCallCheck from \"/Users/mac/Apps/sr-manager/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/mac/Apps/sr-manager/frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/mac/Apps/sr-manager/frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/mac/Apps/sr-manager/frontend/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport { root } from '../../util/root';\nimport { Observable } from '../../Observable';\nimport { Subscriber } from '../../Subscriber';\nimport { map } from '../../operators/map';\n\nfunction getCORSRequest() {\n  if (root.XMLHttpRequest) {\n    return new root.XMLHttpRequest();\n  } else if (!!root.XDomainRequest) {\n    return new root.XDomainRequest();\n  } else {\n    throw new Error('CORS is not supported by your browser');\n  }\n}\n\nfunction getXMLHttpRequest() {\n  if (root.XMLHttpRequest) {\n    return new root.XMLHttpRequest();\n  } else {\n    var progId;\n\n    try {\n      var progIds = ['Msxml2.XMLHTTP', 'Microsoft.XMLHTTP', 'Msxml2.XMLHTTP.4.0'];\n\n      for (var i = 0; i < 3; i++) {\n        try {\n          progId = progIds[i];\n\n          if (new root.ActiveXObject(progId)) {\n            break;\n          }\n        } catch (e) {}\n      }\n\n      return new root.ActiveXObject(progId);\n    } catch (e) {\n      throw new Error('XMLHttpRequest is not supported by your browser');\n    }\n  }\n}\n\nexport function ajaxGet(url) {\n  var headers = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n  return new AjaxObservable({\n    method: 'GET',\n    url: url,\n    headers: headers\n  });\n}\nexport function ajaxPost(url, body, headers) {\n  return new AjaxObservable({\n    method: 'POST',\n    url: url,\n    body: body,\n    headers: headers\n  });\n}\nexport function ajaxDelete(url, headers) {\n  return new AjaxObservable({\n    method: 'DELETE',\n    url: url,\n    headers: headers\n  });\n}\nexport function ajaxPut(url, body, headers) {\n  return new AjaxObservable({\n    method: 'PUT',\n    url: url,\n    body: body,\n    headers: headers\n  });\n}\nexport function ajaxPatch(url, body, headers) {\n  return new AjaxObservable({\n    method: 'PATCH',\n    url: url,\n    body: body,\n    headers: headers\n  });\n}\nvar mapResponse = map(function (x, index) {\n  return x.response;\n});\nexport function ajaxGetJSON(url, headers) {\n  return mapResponse(new AjaxObservable({\n    method: 'GET',\n    url: url,\n    responseType: 'json',\n    headers: headers\n  }));\n}\nexport var AjaxObservable = /*#__PURE__*/function (_Observable) {\n  _inherits(AjaxObservable, _Observable);\n\n  var _super = _createSuper(AjaxObservable);\n\n  function AjaxObservable(urlOrRequest) {\n    var _this;\n\n    _classCallCheck(this, AjaxObservable);\n\n    _this = _super.call(this);\n    var request = {\n      async: true,\n      createXHR: function createXHR() {\n        return this.crossDomain ? getCORSRequest() : getXMLHttpRequest();\n      },\n      crossDomain: true,\n      withCredentials: false,\n      headers: {},\n      method: 'GET',\n      responseType: 'json',\n      timeout: 0\n    };\n\n    if (typeof urlOrRequest === 'string') {\n      request.url = urlOrRequest;\n    } else {\n      for (var prop in urlOrRequest) {\n        if (urlOrRequest.hasOwnProperty(prop)) {\n          request[prop] = urlOrRequest[prop];\n        }\n      }\n    }\n\n    _this.request = request;\n    return _this;\n  }\n\n  _createClass(AjaxObservable, [{\n    key: \"_subscribe\",\n    value: function _subscribe(subscriber) {\n      return new AjaxSubscriber(subscriber, this.request);\n    }\n  }]);\n\n  return AjaxObservable;\n}(Observable);\n\nAjaxObservable.create = function () {\n  var create = function create(urlOrRequest) {\n    return new AjaxObservable(urlOrRequest);\n  };\n\n  create.get = ajaxGet;\n  create.post = ajaxPost;\n  create.delete = ajaxDelete;\n  create.put = ajaxPut;\n  create.patch = ajaxPatch;\n  create.getJSON = ajaxGetJSON;\n  return create;\n}();\n\nexport var AjaxSubscriber = /*#__PURE__*/function (_Subscriber) {\n  _inherits(AjaxSubscriber, _Subscriber);\n\n  var _super2 = _createSuper(AjaxSubscriber);\n\n  function AjaxSubscriber(destination, request) {\n    var _this2;\n\n    _classCallCheck(this, AjaxSubscriber);\n\n    _this2 = _super2.call(this, destination);\n    _this2.request = request;\n    _this2.done = false;\n    var headers = request.headers = request.headers || {};\n\n    if (!request.crossDomain && !_this2.getHeader(headers, 'X-Requested-With')) {\n      headers['X-Requested-With'] = 'XMLHttpRequest';\n    }\n\n    var contentTypeHeader = _this2.getHeader(headers, 'Content-Type');\n\n    if (!contentTypeHeader && !(root.FormData && request.body instanceof root.FormData) && typeof request.body !== 'undefined') {\n      headers['Content-Type'] = 'application/x-www-form-urlencoded; charset=UTF-8';\n    }\n\n    request.body = _this2.serializeBody(request.body, _this2.getHeader(request.headers, 'Content-Type'));\n\n    _this2.send();\n\n    return _this2;\n  }\n\n  _createClass(AjaxSubscriber, [{\n    key: \"next\",\n    value: function next(e) {\n      this.done = true;\n      var xhr = this.xhr,\n          request = this.request,\n          destination = this.destination;\n      var result;\n\n      try {\n        result = new AjaxResponse(e, xhr, request);\n      } catch (err) {\n        return destination.error(err);\n      }\n\n      destination.next(result);\n    }\n  }, {\n    key: \"send\",\n    value: function send() {\n      var request = this.request,\n          _this$request = this.request,\n          user = _this$request.user,\n          method = _this$request.method,\n          url = _this$request.url,\n          async = _this$request.async,\n          password = _this$request.password,\n          headers = _this$request.headers,\n          body = _this$request.body;\n\n      try {\n        var xhr = this.xhr = request.createXHR();\n        this.setupEvents(xhr, request);\n\n        if (user) {\n          xhr.open(method, url, async, user, password);\n        } else {\n          xhr.open(method, url, async);\n        }\n\n        if (async) {\n          xhr.timeout = request.timeout;\n          xhr.responseType = request.responseType;\n        }\n\n        if ('withCredentials' in xhr) {\n          xhr.withCredentials = !!request.withCredentials;\n        }\n\n        this.setHeaders(xhr, headers);\n\n        if (body) {\n          xhr.send(body);\n        } else {\n          xhr.send();\n        }\n      } catch (err) {\n        this.error(err);\n      }\n    }\n  }, {\n    key: \"serializeBody\",\n    value: function serializeBody(body, contentType) {\n      if (!body || typeof body === 'string') {\n        return body;\n      } else if (root.FormData && body instanceof root.FormData) {\n        return body;\n      }\n\n      if (contentType) {\n        var splitIndex = contentType.indexOf(';');\n\n        if (splitIndex !== -1) {\n          contentType = contentType.substring(0, splitIndex);\n        }\n      }\n\n      switch (contentType) {\n        case 'application/x-www-form-urlencoded':\n          return Object.keys(body).map(function (key) {\n            return \"\".concat(encodeURIComponent(key), \"=\").concat(encodeURIComponent(body[key]));\n          }).join('&');\n\n        case 'application/json':\n          return JSON.stringify(body);\n\n        default:\n          return body;\n      }\n    }\n  }, {\n    key: \"setHeaders\",\n    value: function setHeaders(xhr, headers) {\n      for (var key in headers) {\n        if (headers.hasOwnProperty(key)) {\n          xhr.setRequestHeader(key, headers[key]);\n        }\n      }\n    }\n  }, {\n    key: \"getHeader\",\n    value: function getHeader(headers, headerName) {\n      for (var key in headers) {\n        if (key.toLowerCase() === headerName.toLowerCase()) {\n          return headers[key];\n        }\n      }\n\n      return undefined;\n    }\n  }, {\n    key: \"setupEvents\",\n    value: function setupEvents(xhr, request) {\n      var progressSubscriber = request.progressSubscriber;\n\n      function xhrTimeout(e) {\n        var subscriber = xhrTimeout.subscriber,\n            progressSubscriber = xhrTimeout.progressSubscriber,\n            request = xhrTimeout.request;\n\n        if (progressSubscriber) {\n          progressSubscriber.error(e);\n        }\n\n        var error;\n\n        try {\n          error = new AjaxTimeoutError(this, request);\n        } catch (err) {\n          error = err;\n        }\n\n        subscriber.error(error);\n      }\n\n      xhr.ontimeout = xhrTimeout;\n      xhrTimeout.request = request;\n      xhrTimeout.subscriber = this;\n      xhrTimeout.progressSubscriber = progressSubscriber;\n\n      if (xhr.upload && 'withCredentials' in xhr) {\n        if (progressSubscriber) {\n          var _xhrProgress2;\n\n          _xhrProgress2 = function xhrProgress(e) {\n            var _xhrProgress = _xhrProgress2,\n                progressSubscriber = _xhrProgress.progressSubscriber;\n            progressSubscriber.next(e);\n          };\n\n          if (root.XDomainRequest) {\n            xhr.onprogress = _xhrProgress2;\n          } else {\n            xhr.upload.onprogress = _xhrProgress2;\n          }\n\n          _xhrProgress2.progressSubscriber = progressSubscriber;\n        }\n\n        var _xhrError2;\n\n        _xhrError2 = function xhrError(e) {\n          var _xhrError = _xhrError2,\n              progressSubscriber = _xhrError.progressSubscriber,\n              subscriber = _xhrError.subscriber,\n              request = _xhrError.request;\n\n          if (progressSubscriber) {\n            progressSubscriber.error(e);\n          }\n\n          var error;\n\n          try {\n            error = new AjaxError('ajax error', this, request);\n          } catch (err) {\n            error = err;\n          }\n\n          subscriber.error(error);\n        };\n\n        xhr.onerror = _xhrError2;\n        _xhrError2.request = request;\n        _xhrError2.subscriber = this;\n        _xhrError2.progressSubscriber = progressSubscriber;\n      }\n\n      function xhrReadyStateChange(e) {\n        return;\n      }\n\n      xhr.onreadystatechange = xhrReadyStateChange;\n      xhrReadyStateChange.subscriber = this;\n      xhrReadyStateChange.progressSubscriber = progressSubscriber;\n      xhrReadyStateChange.request = request;\n\n      function xhrLoad(e) {\n        var subscriber = xhrLoad.subscriber,\n            progressSubscriber = xhrLoad.progressSubscriber,\n            request = xhrLoad.request;\n\n        if (this.readyState === 4) {\n          var status = this.status === 1223 ? 204 : this.status;\n          var response = this.responseType === 'text' ? this.response || this.responseText : this.response;\n\n          if (status === 0) {\n            status = response ? 200 : 0;\n          }\n\n          if (status < 400) {\n            if (progressSubscriber) {\n              progressSubscriber.complete();\n            }\n\n            subscriber.next(e);\n            subscriber.complete();\n          } else {\n            if (progressSubscriber) {\n              progressSubscriber.error(e);\n            }\n\n            var error;\n\n            try {\n              error = new AjaxError('ajax error ' + status, this, request);\n            } catch (err) {\n              error = err;\n            }\n\n            subscriber.error(error);\n          }\n        }\n      }\n\n      xhr.onload = xhrLoad;\n      xhrLoad.subscriber = this;\n      xhrLoad.progressSubscriber = progressSubscriber;\n      xhrLoad.request = request;\n    }\n  }, {\n    key: \"unsubscribe\",\n    value: function unsubscribe() {\n      var done = this.done,\n          xhr = this.xhr;\n\n      if (!done && xhr && xhr.readyState !== 4 && typeof xhr.abort === 'function') {\n        xhr.abort();\n      }\n\n      _get(_getPrototypeOf(AjaxSubscriber.prototype), \"unsubscribe\", this).call(this);\n    }\n  }]);\n\n  return AjaxSubscriber;\n}(Subscriber);\nexport var AjaxResponse = function AjaxResponse(originalEvent, xhr, request) {\n  _classCallCheck(this, AjaxResponse);\n\n  this.originalEvent = originalEvent;\n  this.xhr = xhr;\n  this.request = request;\n  this.status = xhr.status;\n  this.responseType = xhr.responseType || request.responseType;\n  this.response = parseXhrResponse(this.responseType, xhr);\n};\n\nvar AjaxErrorImpl = function () {\n  function AjaxErrorImpl(message, xhr, request) {\n    Error.call(this);\n    this.message = message;\n    this.name = 'AjaxError';\n    this.xhr = xhr;\n    this.request = request;\n    this.status = xhr.status;\n    this.responseType = xhr.responseType || request.responseType;\n    this.response = parseXhrResponse(this.responseType, xhr);\n    return this;\n  }\n\n  AjaxErrorImpl.prototype = Object.create(Error.prototype);\n  return AjaxErrorImpl;\n}();\n\nexport var AjaxError = AjaxErrorImpl;\n\nfunction parseJson(xhr) {\n  if ('response' in xhr) {\n    return xhr.responseType ? xhr.response : JSON.parse(xhr.response || xhr.responseText || 'null');\n  } else {\n    return JSON.parse(xhr.responseText || 'null');\n  }\n}\n\nfunction parseXhrResponse(responseType, xhr) {\n  switch (responseType) {\n    case 'json':\n      return parseJson(xhr);\n\n    case 'xml':\n      return xhr.responseXML;\n\n    case 'text':\n    default:\n      return 'response' in xhr ? xhr.response : xhr.responseText;\n  }\n}\n\nfunction AjaxTimeoutErrorImpl(xhr, request) {\n  AjaxError.call(this, 'ajax timeout', xhr, request);\n  this.name = 'AjaxTimeoutError';\n  return this;\n}\n\nexport var AjaxTimeoutError = AjaxTimeoutErrorImpl; //# sourceMappingURL=AjaxObservable.js.map","map":{"version":3,"sources":["/Users/mac/Apps/sr-manager/frontend/node_modules/rxjs/_esm2015/internal/observable/dom/AjaxObservable.js"],"names":["root","Observable","Subscriber","map","getCORSRequest","XMLHttpRequest","XDomainRequest","Error","getXMLHttpRequest","progId","progIds","i","ActiveXObject","e","ajaxGet","url","headers","AjaxObservable","method","ajaxPost","body","ajaxDelete","ajaxPut","ajaxPatch","mapResponse","x","index","response","ajaxGetJSON","responseType","urlOrRequest","request","async","createXHR","crossDomain","withCredentials","timeout","prop","hasOwnProperty","subscriber","AjaxSubscriber","create","get","post","delete","put","patch","getJSON","destination","done","getHeader","contentTypeHeader","FormData","serializeBody","send","xhr","result","AjaxResponse","err","error","next","user","password","setupEvents","open","setHeaders","contentType","splitIndex","indexOf","substring","Object","keys","key","encodeURIComponent","join","JSON","stringify","setRequestHeader","headerName","toLowerCase","undefined","progressSubscriber","xhrTimeout","AjaxTimeoutError","ontimeout","upload","xhrProgress","onprogress","xhrError","AjaxError","onerror","xhrReadyStateChange","onreadystatechange","xhrLoad","readyState","status","responseText","complete","onload","abort","originalEvent","parseXhrResponse","AjaxErrorImpl","message","call","name","prototype","parseJson","parse","responseXML","AjaxTimeoutErrorImpl"],"mappings":"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","sourcesContent":["import {root} from '../../util/root';\nimport {Observable} from '../../Observable';\nimport {Subscriber} from '../../Subscriber';\nimport {map} from '../../operators/map';\n\nfunction getCORSRequest() {\n    if (root.XMLHttpRequest) {\n        return new root.XMLHttpRequest();\n    } else if (!!root.XDomainRequest) {\n        return new root.XDomainRequest();\n    } else {\n        throw new Error('CORS is not supported by your browser');\n    }\n}\n\nfunction getXMLHttpRequest() {\n    if (root.XMLHttpRequest) {\n        return new root.XMLHttpRequest();\n    } else {\n        let progId;\n        try {\n            const progIds = ['Msxml2.XMLHTTP', 'Microsoft.XMLHTTP', 'Msxml2.XMLHTTP.4.0'];\n            for (let i = 0; i < 3; i++) {\n                try {\n                    progId = progIds[i];\n                    if (new root.ActiveXObject(progId)) {\n                        break;\n                    }\n                } catch (e) {\n                }\n            }\n            return new root.ActiveXObject(progId);\n        } catch (e) {\n            throw new Error('XMLHttpRequest is not supported by your browser');\n        }\n    }\n}\n\nexport function ajaxGet(url, headers = null) {\n    return new AjaxObservable({method: 'GET', url, headers});\n}\n\nexport function ajaxPost(url, body, headers) {\n    return new AjaxObservable({method: 'POST', url, body, headers});\n}\n\nexport function ajaxDelete(url, headers) {\n    return new AjaxObservable({method: 'DELETE', url, headers});\n}\n\nexport function ajaxPut(url, body, headers) {\n    return new AjaxObservable({method: 'PUT', url, body, headers});\n}\n\nexport function ajaxPatch(url, body, headers) {\n    return new AjaxObservable({method: 'PATCH', url, body, headers});\n}\n\nconst mapResponse = map((x, index) => x.response);\n\nexport function ajaxGetJSON(url, headers) {\n    return mapResponse(new AjaxObservable({\n        method: 'GET',\n        url,\n        responseType: 'json',\n        headers\n    }));\n}\n\nexport class AjaxObservable extends Observable {\n    constructor(urlOrRequest) {\n        super();\n        const request = {\n            async: true,\n            createXHR: function () {\n                return this.crossDomain ? getCORSRequest() : getXMLHttpRequest();\n            },\n            crossDomain: true,\n            withCredentials: false,\n            headers: {},\n            method: 'GET',\n            responseType: 'json',\n            timeout: 0\n        };\n        if (typeof urlOrRequest === 'string') {\n            request.url = urlOrRequest;\n        } else {\n            for (const prop in urlOrRequest) {\n                if (urlOrRequest.hasOwnProperty(prop)) {\n                    request[prop] = urlOrRequest[prop];\n                }\n            }\n        }\n        this.request = request;\n    }\n\n    _subscribe(subscriber) {\n        return new AjaxSubscriber(subscriber, this.request);\n    }\n}\n\nAjaxObservable.create = (() => {\n    const create = (urlOrRequest) => {\n        return new AjaxObservable(urlOrRequest);\n    };\n    create.get = ajaxGet;\n    create.post = ajaxPost;\n    create.delete = ajaxDelete;\n    create.put = ajaxPut;\n    create.patch = ajaxPatch;\n    create.getJSON = ajaxGetJSON;\n    return create;\n})();\n\nexport class AjaxSubscriber extends Subscriber {\n    constructor(destination, request) {\n        super(destination);\n        this.request = request;\n        this.done = false;\n        const headers = request.headers = request.headers || {};\n        if (!request.crossDomain && !this.getHeader(headers, 'X-Requested-With')) {\n            headers['X-Requested-With'] = 'XMLHttpRequest';\n        }\n        let contentTypeHeader = this.getHeader(headers, 'Content-Type');\n        if (!contentTypeHeader && !(root.FormData && request.body instanceof root.FormData) && typeof request.body !== 'undefined') {\n            headers['Content-Type'] = 'application/x-www-form-urlencoded; charset=UTF-8';\n        }\n        request.body = this.serializeBody(request.body, this.getHeader(request.headers, 'Content-Type'));\n        this.send();\n    }\n\n    next(e) {\n        this.done = true;\n        const {xhr, request, destination} = this;\n        let result;\n        try {\n            result = new AjaxResponse(e, xhr, request);\n        } catch (err) {\n            return destination.error(err);\n        }\n        destination.next(result);\n    }\n\n    send() {\n        const {request, request: {user, method, url, async, password, headers, body}} = this;\n        try {\n            const xhr = this.xhr = request.createXHR();\n            this.setupEvents(xhr, request);\n            if (user) {\n                xhr.open(method, url, async, user, password);\n            } else {\n                xhr.open(method, url, async);\n            }\n            if (async) {\n                xhr.timeout = request.timeout;\n                xhr.responseType = request.responseType;\n            }\n            if ('withCredentials' in xhr) {\n                xhr.withCredentials = !!request.withCredentials;\n            }\n            this.setHeaders(xhr, headers);\n            if (body) {\n                xhr.send(body);\n            } else {\n                xhr.send();\n            }\n        } catch (err) {\n            this.error(err);\n        }\n    }\n\n    serializeBody(body, contentType) {\n        if (!body || typeof body === 'string') {\n            return body;\n        } else if (root.FormData && body instanceof root.FormData) {\n            return body;\n        }\n        if (contentType) {\n            const splitIndex = contentType.indexOf(';');\n            if (splitIndex !== -1) {\n                contentType = contentType.substring(0, splitIndex);\n            }\n        }\n        switch (contentType) {\n            case 'application/x-www-form-urlencoded':\n                return Object.keys(body).map(key => `${encodeURIComponent(key)}=${encodeURIComponent(body[key])}`).join('&');\n            case 'application/json':\n                return JSON.stringify(body);\n            default:\n                return body;\n        }\n    }\n\n    setHeaders(xhr, headers) {\n        for (let key in headers) {\n            if (headers.hasOwnProperty(key)) {\n                xhr.setRequestHeader(key, headers[key]);\n            }\n        }\n    }\n\n    getHeader(headers, headerName) {\n        for (let key in headers) {\n            if (key.toLowerCase() === headerName.toLowerCase()) {\n                return headers[key];\n            }\n        }\n        return undefined;\n    }\n\n    setupEvents(xhr, request) {\n        const progressSubscriber = request.progressSubscriber;\n\n        function xhrTimeout(e) {\n            const {subscriber, progressSubscriber, request} = xhrTimeout;\n            if (progressSubscriber) {\n                progressSubscriber.error(e);\n            }\n            let error;\n            try {\n                error = new AjaxTimeoutError(this, request);\n            } catch (err) {\n                error = err;\n            }\n            subscriber.error(error);\n        }\n\n        xhr.ontimeout = xhrTimeout;\n        xhrTimeout.request = request;\n        xhrTimeout.subscriber = this;\n        xhrTimeout.progressSubscriber = progressSubscriber;\n        if (xhr.upload && 'withCredentials' in xhr) {\n            if (progressSubscriber) {\n                let xhrProgress;\n                xhrProgress = function (e) {\n                    const {progressSubscriber} = xhrProgress;\n                    progressSubscriber.next(e);\n                };\n                if (root.XDomainRequest) {\n                    xhr.onprogress = xhrProgress;\n                } else {\n                    xhr.upload.onprogress = xhrProgress;\n                }\n                xhrProgress.progressSubscriber = progressSubscriber;\n            }\n            let xhrError;\n            xhrError = function (e) {\n                const {progressSubscriber, subscriber, request} = xhrError;\n                if (progressSubscriber) {\n                    progressSubscriber.error(e);\n                }\n                let error;\n                try {\n                    error = new AjaxError('ajax error', this, request);\n                } catch (err) {\n                    error = err;\n                }\n                subscriber.error(error);\n            };\n            xhr.onerror = xhrError;\n            xhrError.request = request;\n            xhrError.subscriber = this;\n            xhrError.progressSubscriber = progressSubscriber;\n        }\n\n        function xhrReadyStateChange(e) {\n            return;\n        }\n\n        xhr.onreadystatechange = xhrReadyStateChange;\n        xhrReadyStateChange.subscriber = this;\n        xhrReadyStateChange.progressSubscriber = progressSubscriber;\n        xhrReadyStateChange.request = request;\n\n        function xhrLoad(e) {\n            const {subscriber, progressSubscriber, request} = xhrLoad;\n            if (this.readyState === 4) {\n                let status = this.status === 1223 ? 204 : this.status;\n                let response = (this.responseType === 'text' ? (this.response || this.responseText) : this.response);\n                if (status === 0) {\n                    status = response ? 200 : 0;\n                }\n                if (status < 400) {\n                    if (progressSubscriber) {\n                        progressSubscriber.complete();\n                    }\n                    subscriber.next(e);\n                    subscriber.complete();\n                } else {\n                    if (progressSubscriber) {\n                        progressSubscriber.error(e);\n                    }\n                    let error;\n                    try {\n                        error = new AjaxError('ajax error ' + status, this, request);\n                    } catch (err) {\n                        error = err;\n                    }\n                    subscriber.error(error);\n                }\n            }\n        }\n\n        xhr.onload = xhrLoad;\n        xhrLoad.subscriber = this;\n        xhrLoad.progressSubscriber = progressSubscriber;\n        xhrLoad.request = request;\n    }\n\n    unsubscribe() {\n        const {done, xhr} = this;\n        if (!done && xhr && xhr.readyState !== 4 && typeof xhr.abort === 'function') {\n            xhr.abort();\n        }\n        super.unsubscribe();\n    }\n}\n\nexport class AjaxResponse {\n    constructor(originalEvent, xhr, request) {\n        this.originalEvent = originalEvent;\n        this.xhr = xhr;\n        this.request = request;\n        this.status = xhr.status;\n        this.responseType = xhr.responseType || request.responseType;\n        this.response = parseXhrResponse(this.responseType, xhr);\n    }\n}\n\nconst AjaxErrorImpl = (() => {\n    function AjaxErrorImpl(message, xhr, request) {\n        Error.call(this);\n        this.message = message;\n        this.name = 'AjaxError';\n        this.xhr = xhr;\n        this.request = request;\n        this.status = xhr.status;\n        this.responseType = xhr.responseType || request.responseType;\n        this.response = parseXhrResponse(this.responseType, xhr);\n        return this;\n    }\n\n    AjaxErrorImpl.prototype = Object.create(Error.prototype);\n    return AjaxErrorImpl;\n})();\nexport const AjaxError = AjaxErrorImpl;\n\nfunction parseJson(xhr) {\n    if ('response' in xhr) {\n        return xhr.responseType ? xhr.response : JSON.parse(xhr.response || xhr.responseText || 'null');\n    } else {\n        return JSON.parse(xhr.responseText || 'null');\n    }\n}\n\nfunction parseXhrResponse(responseType, xhr) {\n    switch (responseType) {\n        case 'json':\n            return parseJson(xhr);\n        case 'xml':\n            return xhr.responseXML;\n        case 'text':\n        default:\n            return ('response' in xhr) ? xhr.response : xhr.responseText;\n    }\n}\n\nfunction AjaxTimeoutErrorImpl(xhr, request) {\n    AjaxError.call(this, 'ajax timeout', xhr, request);\n    this.name = 'AjaxTimeoutError';\n    return this;\n}\n\nexport const AjaxTimeoutError = AjaxTimeoutErrorImpl;\n//# sourceMappingURL=AjaxObservable.js.map\n"]},"metadata":{},"sourceType":"module"}