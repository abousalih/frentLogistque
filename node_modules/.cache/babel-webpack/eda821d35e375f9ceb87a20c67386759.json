{"ast":null,"code":"import { scheduleObservable } from './scheduleObservable';\nimport { schedulePromise } from './schedulePromise';\nimport { scheduleArray } from './scheduleArray';\nimport { scheduleIterable } from './scheduleIterable';\nimport { isInteropObservable } from '../util/isInteropObservable';\nimport { isPromise } from '../util/isPromise';\nimport { isArrayLike } from '../util/isArrayLike';\nimport { isIterable } from '../util/isIterable';\nexport function scheduled(input, scheduler) {\n  if (input != null) {\n    if (isInteropObservable(input)) {\n      return scheduleObservable(input, scheduler);\n    } else if (isPromise(input)) {\n      return schedulePromise(input, scheduler);\n    } else if (isArrayLike(input)) {\n      return scheduleArray(input, scheduler);\n    } else if (isIterable(input) || typeof input === 'string') {\n      return scheduleIterable(input, scheduler);\n    }\n  }\n\n  throw new TypeError((input !== null && typeof input || input) + ' is not observable');\n} //# sourceMappingURL=scheduled.js.map","map":{"version":3,"sources":["/Users/mac/Apps/sr-manager/frontend/node_modules/rxjs/_esm2015/internal/scheduled/scheduled.js"],"names":["scheduleObservable","schedulePromise","scheduleArray","scheduleIterable","isInteropObservable","isPromise","isArrayLike","isIterable","scheduled","input","scheduler","TypeError"],"mappings":"AAAA,SAAQA,kBAAR,QAAiC,sBAAjC;AACA,SAAQC,eAAR,QAA8B,mBAA9B;AACA,SAAQC,aAAR,QAA4B,iBAA5B;AACA,SAAQC,gBAAR,QAA+B,oBAA/B;AACA,SAAQC,mBAAR,QAAkC,6BAAlC;AACA,SAAQC,SAAR,QAAwB,mBAAxB;AACA,SAAQC,WAAR,QAA0B,qBAA1B;AACA,SAAQC,UAAR,QAAyB,oBAAzB;AAEA,OAAO,SAASC,SAAT,CAAmBC,KAAnB,EAA0BC,SAA1B,EAAqC;AACxC,MAAID,KAAK,IAAI,IAAb,EAAmB;AACf,QAAIL,mBAAmB,CAACK,KAAD,CAAvB,EAAgC;AAC5B,aAAOT,kBAAkB,CAACS,KAAD,EAAQC,SAAR,CAAzB;AACH,KAFD,MAEO,IAAIL,SAAS,CAACI,KAAD,CAAb,EAAsB;AACzB,aAAOR,eAAe,CAACQ,KAAD,EAAQC,SAAR,CAAtB;AACH,KAFM,MAEA,IAAIJ,WAAW,CAACG,KAAD,CAAf,EAAwB;AAC3B,aAAOP,aAAa,CAACO,KAAD,EAAQC,SAAR,CAApB;AACH,KAFM,MAEA,IAAIH,UAAU,CAACE,KAAD,CAAV,IAAqB,OAAOA,KAAP,KAAiB,QAA1C,EAAoD;AACvD,aAAON,gBAAgB,CAACM,KAAD,EAAQC,SAAR,CAAvB;AACH;AACJ;;AACD,QAAM,IAAIC,SAAJ,CAAc,CAACF,KAAK,KAAK,IAAV,IAAkB,OAAOA,KAAzB,IAAkCA,KAAnC,IAA4C,oBAA1D,CAAN;AACH,C,CAED","sourcesContent":["import {scheduleObservable} from './scheduleObservable';\nimport {schedulePromise} from './schedulePromise';\nimport {scheduleArray} from './scheduleArray';\nimport {scheduleIterable} from './scheduleIterable';\nimport {isInteropObservable} from '../util/isInteropObservable';\nimport {isPromise} from '../util/isPromise';\nimport {isArrayLike} from '../util/isArrayLike';\nimport {isIterable} from '../util/isIterable';\n\nexport function scheduled(input, scheduler) {\n    if (input != null) {\n        if (isInteropObservable(input)) {\n            return scheduleObservable(input, scheduler);\n        } else if (isPromise(input)) {\n            return schedulePromise(input, scheduler);\n        } else if (isArrayLike(input)) {\n            return scheduleArray(input, scheduler);\n        } else if (isIterable(input) || typeof input === 'string') {\n            return scheduleIterable(input, scheduler);\n        }\n    }\n    throw new TypeError((input !== null && typeof input || input) + ' is not observable');\n}\n\n//# sourceMappingURL=scheduled.js.map\n"]},"metadata":{},"sourceType":"module"}