{"ast":null,"code":"import { concat as concatStatic } from '../observable/concat';\nexport function concat() {\n  for (var _len = arguments.length, observables = new Array(_len), _key = 0; _key < _len; _key++) {\n    observables[_key] = arguments[_key];\n  }\n\n  return function (source) {\n    return source.lift.call(concatStatic.apply(void 0, [source].concat(observables)));\n  };\n} //# sourceMappingURL=concat.js.map","map":{"version":3,"sources":["/Users/mac/Apps/sr-manager/srmanager/node_modules/rxjs/_esm2015/internal/operators/concat.js"],"names":["concat","concatStatic","observables","source","lift","call"],"mappings":"AAAA,SAAQA,MAAM,IAAIC,YAAlB,QAAqC,sBAArC;AAEA,OAAO,SAASD,MAAT,GAAgC;AAAA,oCAAbE,WAAa;AAAbA,IAAAA,WAAa;AAAA;;AACnC,SAAO,UAACC,MAAD;AAAA,WAAYA,MAAM,CAACC,IAAP,CAAYC,IAAZ,CAAiBJ,YAAY,MAAZ,UAAaE,MAAb,SAAwBD,WAAxB,EAAjB,CAAZ;AAAA,GAAP;AACH,C,CAED","sourcesContent":["import {concat as concatStatic} from '../observable/concat';\n\nexport function concat(...observables) {\n    return (source) => source.lift.call(concatStatic(source, ...observables));\n}\n\n//# sourceMappingURL=concat.js.map\n"]},"metadata":{},"sourceType":"module"}