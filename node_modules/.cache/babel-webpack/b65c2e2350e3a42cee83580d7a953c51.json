{"ast":null,"code":"/**\n * @internal\n */\nexport function augmentWebsocket(webSocket, debug) {\n  webSocket.terminate = function () {\n    var noOp = function noOp() {}; // set all callbacks to no op\n\n\n    this.onerror = noOp;\n    this.onmessage = noOp;\n    this.onopen = noOp;\n    var ts = new Date();\n    var origOnClose = this.onclose; // Track delay in actual closure of the socket\n\n    this.onclose = function (closeEvent) {\n      var delay = new Date().getTime() - ts.getTime();\n      debug(\"Discarded socket closed after \".concat(delay, \"ms, with code/reason: \").concat(closeEvent.code, \"/\").concat(closeEvent.reason));\n    };\n\n    this.close();\n    origOnClose.call(this, {\n      code: 4001,\n      reason: 'Heartbeat failure, discarding the socket',\n      wasClean: false\n    });\n  };\n} //# sourceMappingURL=augment-websocket.js.map","map":{"version":3,"sources":["/Users/mac/Apps/sr-manager/frontend/node_modules/@stomp/stompjs/esm6/augment-websocket.js"],"names":["augmentWebsocket","webSocket","debug","terminate","noOp","onerror","onmessage","onopen","ts","Date","origOnClose","onclose","closeEvent","delay","getTime","code","reason","close","call","wasClean"],"mappings":"AAAA;AACA;AACA;AACA,OAAO,SAASA,gBAAT,CAA0BC,SAA1B,EAAqCC,KAArC,EAA4C;AAC/CD,EAAAA,SAAS,CAACE,SAAV,GAAsB,YAAY;AAC9B,QAAMC,IAAI,GAAG,SAAPA,IAAO,GAAM,CAAG,CAAtB,CAD8B,CAE9B;;;AACA,SAAKC,OAAL,GAAeD,IAAf;AACA,SAAKE,SAAL,GAAiBF,IAAjB;AACA,SAAKG,MAAL,GAAcH,IAAd;AACA,QAAMI,EAAE,GAAG,IAAIC,IAAJ,EAAX;AACA,QAAMC,WAAW,GAAG,KAAKC,OAAzB,CAP8B,CAQ9B;;AACA,SAAKA,OAAL,GAAe,UAAAC,UAAU,EAAI;AACzB,UAAMC,KAAK,GAAG,IAAIJ,IAAJ,GAAWK,OAAX,KAAuBN,EAAE,CAACM,OAAH,EAArC;AACAZ,MAAAA,KAAK,yCAAkCW,KAAlC,mCAAgED,UAAU,CAACG,IAA3E,cAAmFH,UAAU,CAACI,MAA9F,EAAL;AACH,KAHD;;AAIA,SAAKC,KAAL;AACAP,IAAAA,WAAW,CAACQ,IAAZ,CAAiB,IAAjB,EAAuB;AACnBH,MAAAA,IAAI,EAAE,IADa;AAEnBC,MAAAA,MAAM,EAAE,0CAFW;AAGnBG,MAAAA,QAAQ,EAAE;AAHS,KAAvB;AAKH,GAnBD;AAoBH,C,CACD","sourcesContent":["/**\n * @internal\n */\nexport function augmentWebsocket(webSocket, debug) {\n    webSocket.terminate = function () {\n        const noOp = () => { };\n        // set all callbacks to no op\n        this.onerror = noOp;\n        this.onmessage = noOp;\n        this.onopen = noOp;\n        const ts = new Date();\n        const origOnClose = this.onclose;\n        // Track delay in actual closure of the socket\n        this.onclose = closeEvent => {\n            const delay = new Date().getTime() - ts.getTime();\n            debug(`Discarded socket closed after ${delay}ms, with code/reason: ${closeEvent.code}/${closeEvent.reason}`);\n        };\n        this.close();\n        origOnClose.call(this, {\n            code: 4001,\n            reason: 'Heartbeat failure, discarding the socket',\n            wasClean: false,\n        });\n    };\n}\n//# sourceMappingURL=augment-websocket.js.map"]},"metadata":{},"sourceType":"module"}