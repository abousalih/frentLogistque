{"ast":null,"code":"import { Observable } from '../Observable';\nimport { Subscription } from '../Subscription';\nexport function pairs(obj, scheduler) {\n  if (!scheduler) {\n    return new Observable(function (subscriber) {\n      var keys = Object.keys(obj);\n\n      for (var i = 0; i < keys.length && !subscriber.closed; i++) {\n        var key = keys[i];\n\n        if (obj.hasOwnProperty(key)) {\n          subscriber.next([key, obj[key]]);\n        }\n      }\n\n      subscriber.complete();\n    });\n  } else {\n    return new Observable(function (subscriber) {\n      var keys = Object.keys(obj);\n      var subscription = new Subscription();\n      subscription.add(scheduler.schedule(dispatch, 0, {\n        keys: keys,\n        index: 0,\n        subscriber: subscriber,\n        subscription: subscription,\n        obj: obj\n      }));\n      return subscription;\n    });\n  }\n}\nexport function dispatch(state) {\n  var keys = state.keys,\n      index = state.index,\n      subscriber = state.subscriber,\n      subscription = state.subscription,\n      obj = state.obj;\n\n  if (!subscriber.closed) {\n    if (index < keys.length) {\n      var key = keys[index];\n      subscriber.next([key, obj[key]]);\n      subscription.add(this.schedule({\n        keys: keys,\n        index: index + 1,\n        subscriber: subscriber,\n        subscription: subscription,\n        obj: obj\n      }));\n    } else {\n      subscriber.complete();\n    }\n  }\n} //# sourceMappingURL=pairs.js.map","map":{"version":3,"sources":["/Users/mac/Apps/sr-manager/frontend/node_modules/rxjs/_esm2015/internal/observable/pairs.js"],"names":["Observable","Subscription","pairs","obj","scheduler","subscriber","keys","Object","i","length","closed","key","hasOwnProperty","next","complete","subscription","add","schedule","dispatch","index","state"],"mappings":"AAAA,SAAQA,UAAR,QAAyB,eAAzB;AACA,SAAQC,YAAR,QAA2B,iBAA3B;AAEA,OAAO,SAASC,KAAT,CAAeC,GAAf,EAAoBC,SAApB,EAA+B;AAClC,MAAI,CAACA,SAAL,EAAgB;AACZ,WAAO,IAAIJ,UAAJ,CAAe,UAAAK,UAAU,EAAI;AAChC,UAAMC,IAAI,GAAGC,MAAM,CAACD,IAAP,CAAYH,GAAZ,CAAb;;AACA,WAAK,IAAIK,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,IAAI,CAACG,MAAT,IAAmB,CAACJ,UAAU,CAACK,MAA/C,EAAuDF,CAAC,EAAxD,EAA4D;AACxD,YAAMG,GAAG,GAAGL,IAAI,CAACE,CAAD,CAAhB;;AACA,YAAIL,GAAG,CAACS,cAAJ,CAAmBD,GAAnB,CAAJ,EAA6B;AACzBN,UAAAA,UAAU,CAACQ,IAAX,CAAgB,CAACF,GAAD,EAAMR,GAAG,CAACQ,GAAD,CAAT,CAAhB;AACH;AACJ;;AACDN,MAAAA,UAAU,CAACS,QAAX;AACH,KATM,CAAP;AAUH,GAXD,MAWO;AACH,WAAO,IAAId,UAAJ,CAAe,UAAAK,UAAU,EAAI;AAChC,UAAMC,IAAI,GAAGC,MAAM,CAACD,IAAP,CAAYH,GAAZ,CAAb;AACA,UAAMY,YAAY,GAAG,IAAId,YAAJ,EAArB;AACAc,MAAAA,YAAY,CAACC,GAAb,CAAiBZ,SAAS,CAACa,QAAV,CAAmBC,QAAnB,EAA6B,CAA7B,EAAgC;AAACZ,QAAAA,IAAI,EAAJA,IAAD;AAAOa,QAAAA,KAAK,EAAE,CAAd;AAAiBd,QAAAA,UAAU,EAAVA,UAAjB;AAA6BU,QAAAA,YAAY,EAAZA,YAA7B;AAA2CZ,QAAAA,GAAG,EAAHA;AAA3C,OAAhC,CAAjB;AACA,aAAOY,YAAP;AACH,KALM,CAAP;AAMH;AACJ;AAED,OAAO,SAASG,QAAT,CAAkBE,KAAlB,EAAyB;AAC5B,MAAOd,IAAP,GAAqDc,KAArD,CAAOd,IAAP;AAAA,MAAaa,KAAb,GAAqDC,KAArD,CAAaD,KAAb;AAAA,MAAoBd,UAApB,GAAqDe,KAArD,CAAoBf,UAApB;AAAA,MAAgCU,YAAhC,GAAqDK,KAArD,CAAgCL,YAAhC;AAAA,MAA8CZ,GAA9C,GAAqDiB,KAArD,CAA8CjB,GAA9C;;AACA,MAAI,CAACE,UAAU,CAACK,MAAhB,EAAwB;AACpB,QAAIS,KAAK,GAAGb,IAAI,CAACG,MAAjB,EAAyB;AACrB,UAAME,GAAG,GAAGL,IAAI,CAACa,KAAD,CAAhB;AACAd,MAAAA,UAAU,CAACQ,IAAX,CAAgB,CAACF,GAAD,EAAMR,GAAG,CAACQ,GAAD,CAAT,CAAhB;AACAI,MAAAA,YAAY,CAACC,GAAb,CAAiB,KAAKC,QAAL,CAAc;AAACX,QAAAA,IAAI,EAAJA,IAAD;AAAOa,QAAAA,KAAK,EAAEA,KAAK,GAAG,CAAtB;AAAyBd,QAAAA,UAAU,EAAVA,UAAzB;AAAqCU,QAAAA,YAAY,EAAZA,YAArC;AAAmDZ,QAAAA,GAAG,EAAHA;AAAnD,OAAd,CAAjB;AACH,KAJD,MAIO;AACHE,MAAAA,UAAU,CAACS,QAAX;AACH;AACJ;AACJ,C,CAED","sourcesContent":["import {Observable} from '../Observable';\nimport {Subscription} from '../Subscription';\n\nexport function pairs(obj, scheduler) {\n    if (!scheduler) {\n        return new Observable(subscriber => {\n            const keys = Object.keys(obj);\n            for (let i = 0; i < keys.length && !subscriber.closed; i++) {\n                const key = keys[i];\n                if (obj.hasOwnProperty(key)) {\n                    subscriber.next([key, obj[key]]);\n                }\n            }\n            subscriber.complete();\n        });\n    } else {\n        return new Observable(subscriber => {\n            const keys = Object.keys(obj);\n            const subscription = new Subscription();\n            subscription.add(scheduler.schedule(dispatch, 0, {keys, index: 0, subscriber, subscription, obj}));\n            return subscription;\n        });\n    }\n}\n\nexport function dispatch(state) {\n    const {keys, index, subscriber, subscription, obj} = state;\n    if (!subscriber.closed) {\n        if (index < keys.length) {\n            const key = keys[index];\n            subscriber.next([key, obj[key]]);\n            subscription.add(this.schedule({keys, index: index + 1, subscriber, subscription, obj}));\n        } else {\n            subscriber.complete();\n        }\n    }\n}\n\n//# sourceMappingURL=pairs.js.map\n"]},"metadata":{},"sourceType":"module"}