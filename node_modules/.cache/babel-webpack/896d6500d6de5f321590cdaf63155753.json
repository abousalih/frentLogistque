{"ast":null,"code":"import _classCallCheck from \"/Users/mac/Apps/sr-manager/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/mac/Apps/sr-manager/frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\n\n/**\n * Supported STOMP versions\n *\n * Part of `@stomp/stompjs`.\n */\nexport var Versions = /*#__PURE__*/function () {\n  /**\n   * Takes an array of string of versions, typical elements '1.0', '1.1', or '1.2'\n   *\n   * You will an instance if this class if you want to override supported versions to be declared during\n   * STOMP handshake.\n   */\n  function Versions(versions) {\n    _classCallCheck(this, Versions);\n\n    this.versions = versions;\n  }\n  /**\n   * Used as part of CONNECT STOMP Frame\n   */\n\n\n  _createClass(Versions, [{\n    key: \"supportedVersions\",\n    value: function supportedVersions() {\n      return this.versions.join(',');\n    }\n    /**\n     * Used while creating a WebSocket\n     */\n\n  }, {\n    key: \"protocolVersions\",\n    value: function protocolVersions() {\n      return this.versions.map(function (x) {\n        return \"v\".concat(x.replace('.', ''), \".stomp\");\n      });\n    }\n  }]);\n\n  return Versions;\n}();\n/**\n * Indicates protocol version 1.0\n */\n\nVersions.V1_0 = '1.0';\n/**\n * Indicates protocol version 1.1\n */\n\nVersions.V1_1 = '1.1';\n/**\n * Indicates protocol version 1.2\n */\n\nVersions.V1_2 = '1.2';\n/**\n * @internal\n */\n\nVersions.default = new Versions([Versions.V1_0, Versions.V1_1, Versions.V1_2]); //# sourceMappingURL=versions.js.map","map":{"version":3,"sources":["/Users/mac/Apps/sr-manager/frontend/node_modules/@stomp/stompjs/esm6/versions.js"],"names":["Versions","versions","join","map","x","replace","V1_0","V1_1","V1_2","default"],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;AACA,WAAaA,QAAb;AACI;AACJ;AACA;AACA;AACA;AACA;AACI,oBAAYC,QAAZ,EAAsB;AAAA;;AAClB,SAAKA,QAAL,GAAgBA,QAAhB;AACH;AACD;AACJ;AACA;;;AAZA;AAAA;AAAA,WAaI,6BAAoB;AAChB,aAAO,KAAKA,QAAL,CAAcC,IAAd,CAAmB,GAAnB,CAAP;AACH;AACD;AACJ;AACA;;AAlBA;AAAA;AAAA,WAmBI,4BAAmB;AACf,aAAO,KAAKD,QAAL,CAAcE,GAAd,CAAkB,UAAAC,CAAC;AAAA,0BAAQA,CAAC,CAACC,OAAF,CAAU,GAAV,EAAe,EAAf,CAAR;AAAA,OAAnB,CAAP;AACH;AArBL;;AAAA;AAAA;AAuBA;AACA;AACA;;AACAL,QAAQ,CAACM,IAAT,GAAgB,KAAhB;AACA;AACA;AACA;;AACAN,QAAQ,CAACO,IAAT,GAAgB,KAAhB;AACA;AACA;AACA;;AACAP,QAAQ,CAACQ,IAAT,GAAgB,KAAhB;AACA;AACA;AACA;;AACAR,QAAQ,CAACS,OAAT,GAAmB,IAAIT,QAAJ,CAAa,CAC5BA,QAAQ,CAACM,IADmB,EAE5BN,QAAQ,CAACO,IAFmB,EAG5BP,QAAQ,CAACQ,IAHmB,CAAb,CAAnB,C,CAKA","sourcesContent":["/**\n * Supported STOMP versions\n *\n * Part of `@stomp/stompjs`.\n */\nexport class Versions {\n    /**\n     * Takes an array of string of versions, typical elements '1.0', '1.1', or '1.2'\n     *\n     * You will an instance if this class if you want to override supported versions to be declared during\n     * STOMP handshake.\n     */\n    constructor(versions) {\n        this.versions = versions;\n    }\n    /**\n     * Used as part of CONNECT STOMP Frame\n     */\n    supportedVersions() {\n        return this.versions.join(',');\n    }\n    /**\n     * Used while creating a WebSocket\n     */\n    protocolVersions() {\n        return this.versions.map(x => `v${x.replace('.', '')}.stomp`);\n    }\n}\n/**\n * Indicates protocol version 1.0\n */\nVersions.V1_0 = '1.0';\n/**\n * Indicates protocol version 1.1\n */\nVersions.V1_1 = '1.1';\n/**\n * Indicates protocol version 1.2\n */\nVersions.V1_2 = '1.2';\n/**\n * @internal\n */\nVersions.default = new Versions([\n    Versions.V1_0,\n    Versions.V1_1,\n    Versions.V1_2,\n]);\n//# sourceMappingURL=versions.js.map"]},"metadata":{},"sourceType":"module"}